#+TITLE:  Tools
#+AUTHOR: Madhu Srinivasan
#+EMAIL:  madhu.srinivasan@outlook.com

#+OPTIONS: author:t date:t email:t
#+OPTIONS: tags:nil toc:t num:nil

# #+STARTUP: content
# #+STARTUP: overview
#+STARTUP: showall
# #+STARTUP: showeverything

* Computing Tools
** Miscellaneous Tools
- [[https://jupyterlab.readthedocs.io/en/stable/][Jupyter Lab]]
- [[http://numba.pydata.org][Numba: JIT Compiler for Python]]
- [[https://www.anaconda.com/distribution/][Anaconda Python Distribution]]
- [[https://metaflow.org][Metaflow by Netflix]]
- [[https://ax.dev][Adaptive Experimentation Platform from Facebook]]
- [[https://github.com/nteract/papermill][Papermill]]
** Containers and Orchestration
- [[https://kubernetes.io][Kubernetes]]
- [[https://buildpacks.io][Buildpack]]
- [[https://knative.dev][knative]]
- [[https://github.com/GoogleContainerTools/kaniko][kaniko]]
** Python Distributed Computing
- [[https://ray.io/][Ray.io]]
- [[https://github.com/modin-project/modin][Modin]]: Distributed Pandas on Ray or Dask
- [[https://airflow.apache.org/concepts.html][Apache Airflow]]
- [[https://dask.pydata.org/en/latest/scheduling.html][Dask Distributed]]
- [[https://ipyparallel.readthedocs.io/en/latest/index.html][ipyparallel]]
- [[https://luigi.readthedocs.io/en/latest/][Luigi]]
- [[http://www.celeryproject.org][Celery]]

* Deeplearning
** Libraries
- TensorFlow
- MXNet
- [[http://pytorch.org][PyTorch]]
- H2O Platform for AI Analytics
- [[http://neon.nervanasys.com/docs/latest/index.html][Neon - by NervanaSys]]
- [[https://github.com/fastai/fastai][FastAI]]
- [[http://tiny-dnn.readthedocs.io/en/latest/][TinyDNN]]: a minimal c++ learning
- [[https://uber.github.io/ludwig/][Ludwig]]: a code-free Deep Learning Tool based on TensorFlow, from Uber
- [[https://github.com/deepmind/graph_nets][GraphNets]]: By Deepmind
- [[https://github.com/microsoft/onnxruntime][ONNX Runtime]]: To evaluate ONNX Networks, by Microsoft
- [[https://learnpythia.readthedocs.io/en/latest/#][Pythia]]:  Modular framework on top of PyTorch for Vision and Language Tasks by Facebook
** Distributed
- [[https://github.com/horovod/horovod][Horovod]] - by uber
- [[https://github.com/intelAI/Nauta][Nauta]] - by Intel
- [[https://eng.uber.com/michelangelo/][Michelangelo]]: a reference architecture for large scale machine learning solutions
- [[https://eng.uber.com/managing-data-workflows-at-scale/][Piper]] - for Data Science workflows by Uber
- [[https://flyte.org/][Flyte]]: Distributed processing platform  by Lyft
- [[https://ray.readthedocs.io/en/latest/tune.html][Tune]]: Tune is a Python library for experiment execution and hyperparameter tuning at any scale
- [[https://docs.ray.io/en/latest/][Ray]]: Ray is a fast and simple framework for building and running distributed applications
- [[https://optuna.org][Optuna]]: An open source HPO framework to automate hyperparameter search
** Workflows and Diagnostics
- [[https://eng.uber.com/manifold/][Manifold]]: Visual debugging tools for Machine Learning, by Uber
- [[https://neptune.ai][Neptune]]: Lightweight experiment management tool
- [[https://mlflow.org][MLFlow]]: Opensource platform for ML lifecycle
- [[https://pycaret.org][PyCaret]]: Low-code ML Library in Python
** Model Zoo
- [[https://github.com/tensorflow/tensor2tensor][DL Models for Tensorflow]]
- [[https://pytorch.org/docs/stable/torchvision/models.html#id4][Model Zoo from PyTorch]]
- [[https://modelzoo.co/][Model Zoo Collection]]
- [[https://pytorch.org/hub][PyTorch Hub]]
** Deployment and Pipelines
- [[https://www.kubeflow.org][Kubeflow]]: The Machine Learning Toolkit for Kubernetes
- [[https://www.tensorflow.org/tfx][TFX]]: TFX is an end-to-end platform for deploying production ML pipelines
** Reinforcement Learning
- [[https://github.com/deepmind/trfl][Reinforcement Learning with Tensorflow]]
- [[https://rlpyt.readthedocs.io/en/latest/][Reinforcement Learning in PyTorch]]
- [[https://ray.readthedocs.io/en/latest/rllib.html][rllib]]: Scalable Reinforcement Learning built on Ray
- [[https://github.com/openai/evolution-strategies-starter][Evolutionary Strategies Code]]: Code for the paper "Evolution Strategies as a Scalable Alternative to Reinforcement Learning"
- [[https://github.com/uber-research/EvoGrad][Evograd]]: Code for evograd paper by Uber

* Interactive Web Documents
- [[https://beta.observablehq.com][Observable]]
- [[https://idyll-lang.org][Idyll]]
- [[https://alpha.iodide.io][Iodide]]
  - [[https://hacks.mozilla.org/2019/03/iodide-an-experimental-tool-for-scientific-communicatiodide-for-scientific-communication-exploration-on-the-web/ ][Article on Iodide on Mozilla]]
- [[https://nteract.io][nteract]]

* Programming Languages
** Rust
*** 3D Graphics and Scientific Computing
- [[https://www.rustsim.org][Numerical Simulation Packages]]
*** Distributed and Asynchronous Computing
- [[https://actix.rs][Actix: Rust Actor System and Web Framework]]
- [[https://tokio.rs][Tokio: Asynchronous runtime for Rust]]
- [[https://github.com/rayon-rs/rayon][Rayon: Data-parallelism library in Rust]]
- [[https://github.com/crossbeam-rs/crossbeam][Crossbeam: Concurrency library]]
- [[https://github.com/constellation-rs/constellation][Constellation: Distributed Computing with Rust]]
- [[https://github.com/constellation-rs/amadeus][Amadeus: Distributed Data Analysis in Rust]]
*** Databases
- [[http://diesel.rs][Diesel: Rust ORM Library]]
*** HTTP and Web
- [[https://github.com/seanmonstar/warp][Warp]]: Web server framework based on [[https://hyper.rs][hyper]]
- [[https://hyper.rs][hyper]]: Fast HTTP Implementation in and for rust
- [[https://github.com/seanmonstar/reqwest][reqwest]]: Async HTTP client for rust, based on hyper
